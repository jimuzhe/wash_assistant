name: Build Flutter Apps

on:
  workflow_dispatch:
    inputs:
      build-flavors:
        description: 'Flutter build flavors (comma separated, e.g. release,profile)'
        required: false
        default: 'release'

jobs:
  android:
    name: Build Android APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Install dependencies
        working-directory: wash_app
        run: flutter pub get

      - name: Build APK
        working-directory: wash_app
        env:
          BUILD_FLAVORS: ${{ github.event.inputs['build-flavors'] || 'release' }}
        run: |
          IFS=',' read -ra FLAVORS <<< "$BUILD_FLAVORS"
          for flavor in "${FLAVORS[@]}"; do
            flavor=$(echo "$flavor" | xargs)
            if [ -n "$flavor" ]; then
              flutter build apk --${flavor}
            else
              flutter build apk --release
            fi
          done

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: wash_app/build/app/outputs/flutter-apk/*.apk

  ios:
    name: Build iOS IPA (unsigned)
    runs-on: macos-14

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Install dependencies
        working-directory: wash_app
        run: flutter pub get

      - name: Build iOS app and package IPA (unsigned)
        working-directory: wash_app
        env:
          BUILD_FLAVORS: ${{ github.event.inputs['build-flavors'] || 'release' }}
        run: |
          set -eo pipefail
          IFS=',' read -ra FLAVORS <<< "$BUILD_FLAVORS"
          for flavor in "${FLAVORS[@]}"; do
            flavor=$(echo "$flavor" | xargs)
            build_mode=${flavor:-release}

            if [ "$build_mode" = "release" ]; then
              flutter build ios --release --no-codesign
            else
              flutter build ios --${build_mode} --no-codesign
            fi

            APP_DIR="build/ios/iphoneos"
            OUTPUT_DIR="build/ios/ipa/${build_mode}"
            IPA_NAME="Runner-${build_mode}-unsigned.ipa"

            rm -rf Payload
            mkdir -p Payload "$OUTPUT_DIR"
            cp -R "$APP_DIR/Runner.app" Payload/
            zip -qry "$OUTPUT_DIR/$IPA_NAME" Payload
            rm -rf Payload
          done

      - name: Upload IPA artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: wash_app/build/ios/ipa/**/*.ipa
